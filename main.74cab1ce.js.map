{"version":3,"sources":["scripts/main.js"],"names":["thead","document","querySelector","tbody","rows","numberOfClicks","indexOfPressedCell","convert","string","Number","replace","sortColumn","e","index","sorted","target","cellIndex","title","closest","innerText","sort","currentRow","nextRow","currentValue","cells","nextValue","localeCompare","append","reverse","addEventListener","addClass","selected","forEach","row","classList","remove","add","body","insertAdjacentHTML","form","createNotification","type","description","notification","createElement","className","dataset","qa","notificationTitle","notificationDescription","prepend","setTimeout","addNewEmployee","preventDefault","data","FormData","employeeName","get","age","position","salary","toLocaleString","length","elements","name","value","selectedField","handleDblclickOnTableField","text","input","ev","replaceWith","eve","code"],"mappings":"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","file":"main.74cab1ce.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst thead = document.querySelector('thead');\nconst tbody = document.querySelector('tbody');\nconst rows = [...tbody.rows];\n\nlet numberOfClicks = 0;\nlet indexOfPressedCell = 0;\n\nconst convert = (string) => {\n  return Number(string.replace(/[$,]/g, ''));\n};\n\nconst sortColumn = (e) => {\n  const index = e.target.cellIndex;\n  const title = e.target.closest('th');\n  let sorted;\n\n  if (indexOfPressedCell !== index) {\n    numberOfClicks = 0;\n  }\n\n  indexOfPressedCell = index;\n  numberOfClicks++;\n\n  switch (title.innerText) {\n    case 'Name':\n    case 'Position':\n    case 'Office':\n      sorted = rows.sort(\n        (currentRow, nextRow) => {\n          const currentValue = currentRow.cells[index].innerText;\n          const nextValue = nextRow.cells[index].innerText;\n\n          return currentValue.localeCompare(nextValue);\n        });\n      break;\n\n    case 'Age':\n    case 'Salary':\n      sorted = rows.sort((currentRow, nextRow) => {\n        const currentValue = currentRow.cells[index].innerText;\n        const nextValue = nextRow.cells[index].innerText;\n\n        return convert(currentValue) - convert(nextValue);\n      });\n  }\n\n  numberOfClicks % 2 !== 0\n    ? tbody.append(...sorted)\n    : tbody.append(...sorted.reverse());\n};\n\nthead.addEventListener('click', sortColumn);\n\nconst addClass = (e) => {\n  const selected = e.target.closest('tr');\n\n  rows.forEach(row => row.classList.remove('active'));\n  selected.classList.add('active');\n};\n\ntbody.addEventListener('click', addClass);\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form class='new-employee-form'>\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n    <label>Office:\n      <select name=\"office\" type=\"text\" data-qa=\"office\" required>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n       </select>\n    </label>\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n    <button type=\"submit\">Save to table</button>\n  </form>\n`);\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', addNewEmployee);\n\nfunction createNotification(type, title, description) {\n  const notification = document.createElement('div');\n\n  notification.className = `notification ${type}`;\n  notification.dataset.qa = 'notification';\n\n  const notificationTitle = document.createElement('h2');\n\n  notificationTitle.className = 'title';\n  notificationTitle.innerText = title;\n\n  const notificationDescription = document.createElement('p');\n\n  notificationDescription.innerText = description;\n  notification.append(notificationTitle, notificationDescription);\n\n  document.body.prepend(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 5000);\n}\n\nfunction addNewEmployee(e) {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const employeeName = data.get('name');\n  const age = data.get('age');\n  const position = data.get('position');\n  const salary = '$' + (Number(data.get('salary')).toLocaleString('en'));\n  const minAge = 18;\n  const maxAge = 90;\n  const minNameLength = 4;\n\n  if (employeeName.length < minNameLength) {\n    return createNotification(\n      'error',\n      'Error',\n      'Name should consist of 5 or more letters'\n    );\n  }\n\n  if (!position) {\n    return createNotification(\n      'error',\n      'Error',\n      'Please indicate the correct position',\n    );\n  }\n\n  if (age < minAge || age > maxAge) {\n    return createNotification(\n      'error',\n      'Error',\n      'Age should not be less than 18 or more than 90'\n    );\n  }\n\n  tbody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${employeeName}</td>\n      <td>${position}</td>\n      <td>${data.get('office')}</td>\n      <td>${age}</td>\n      <td>${salary}</td>\n    </tr>\n  `);\n\n  form.elements.name.value = '';\n  form.elements.age.value = '';\n  form.elements.position.value = '';\n  form.elements.salary.value = '';\n\n  return createNotification(\n    'success',\n    'Success',\n    'New employee was successfully added'\n  );\n}\n\nlet selectedField = null;\n\nconst handleDblclickOnTableField = (e) => {\n  e.preventDefault();\n\n  if (selectedField) {\n    return;\n  }\n\n  selectedField = e.target;\n\n  const text = selectedField.innerText;\n  const input = document.createElement('input');\n\n  input.className = 'cell-input';\n  input.value = text;\n\n  input.addEventListener('change', () => {\n    selectedField.innerText = input.value !== '' ? input.value : text;\n  });\n\n  input.addEventListener('blur', (ev) => {\n    ev.target.replaceWith(selectedField);\n    selectedField = null;\n  });\n\n  input.addEventListener('keydown', (eve) => {\n    if (eve.code === 'Enter') {\n      eve.target.replaceWith(selectedField);\n      selectedField = null;\n    }\n  });\n\n  selectedField.replaceWith(input);\n};\n\ntbody.addEventListener('dblclick', handleDblclickOnTableField);\n"]}